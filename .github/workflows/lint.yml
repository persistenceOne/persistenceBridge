name: Lint
# Lint runs golangci-lint over the entire Gaia repository
# This workflow is run on every pull request and push to master
# The `golangci` job will pass without running if no *.{go, mod, sum} files have been modified.
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  # guarantees up to date generated files in the branch
  generate:
    name: check-generate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          stable: 'false'
          go-version: '^1.17'
      - name: go env
        run: |
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Get dependancies
        run: make deps
      - name: Generate
        run: make generate
      - name: Check generate diff
        run: git diff --exit-code ./ ':!go.sum'

  golangci:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERN: |
            .go
            .mod
            .sum
      - uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.43.0
        if: "env.GIT_DIFF != ''"

  units:
    name: unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          stable: 'false'
          go-version: '^1.17'
      - name: go env
        run: |
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Get dependancies
        run: make deps
      - name: Run unit tests
        run: make units

  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          stable: 'false'
          go-version: '^1.17'
      - name: go env
        run: |
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Get dependancies
        run: make deps
      - name: Build
        run: make

  cosmos-sec:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Run Cosmos Gosec
        uses: actions/checkout@v2
      - name: Run Gosec Security Scanner
        uses: informalsystems/gosec@master
        with:
          args: -quiet -test ./...